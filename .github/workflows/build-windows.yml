name: Build Windows Executable

on:
  push:
    branches: [ master ]

permissions:
  contents: write

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install

      - name: Configure git for CI
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Auto-bump version (patch)
        id: bump_version
        run: |
          npm version patch --no-git-tag-version
          git add package.json package-lock.json || true
          git commit -m "ci: bump version [skip ci]" || echo "No changes to commit"
          git push || echo "No changes to push"

      - name: Build Windows executable
        run: npm run build:win

      - name: Copy .exe to root (assumes 1 .exe in dist)
        run: |
          $exe = Get-ChildItem -Path dist -Filter *.exe | Select-Object -First 1
          Copy-Item $exe.FullName -Destination ./CryptoPriceWidget.exe

      - name: Get version from package.json
        id: get_version
        run: |
          $version = (Get-Content package.json | ConvertFrom-Json).version
          echo "version=$version" | Out-File -FilePath $env:GITHUB_OUTPUT -Append

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.get_version.outputs.version }}
          name: Crypto Price Widget v${{ steps.get_version.outputs.version }}
          body: |
            âœ… **Windows Executable v${{ steps.get_version.outputs.version }}**

            This release includes:
            - ðŸ”¹ `CryptoPriceWidget.exe`: Directly run the executable

            Automatically built from the `master` branch.
          files: CryptoPriceWidget.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Update README with latest release link
        run: |
          $readme = Get-Content README.md -Raw
          $version = "v${{ steps.get_version.outputs.version }}"
          $repo = "funyug/crypto-price-widget"
          $link = "[Download latest Windows build](https://github.com/$repo/releases/tag/$version)"
          if ($readme -match '\[Download latest Windows build\]\(https://github.com/.*/releases/tag/v[0-9.]+\)') {
            $readme = [System.Text.RegularExpressions.Regex]::Replace($readme, '\[Download latest Windows build\]\(https://github.com/.*/releases/tag/v[0-9.]+\)', $link)
          } else {
            $readme = "$link`n`n$readme"
          }
          Set-Content README.md $readme

      - name: Commit and push updated README
        run: |
          git add README.md
          git commit -m "docs: update download link for v${{ steps.get_version.outputs.version }} [skip ci]" || echo "No changes to commit"
          git push || echo "No changes to push"
